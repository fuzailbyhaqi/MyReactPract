{"ast":null,"code":"import axios from \"axios\";\nexport default class AxiosHelper {\n  /**\n   * @param endPoint This will be different for every endpoint.\n   */\n  constructor(endPoint) {\n    this.endPoint = \"\";\n    this.endPoint = endPoint;\n    axios.defaults.baseURL = \"https://api.pkubite.com/\";\n    //  axios.defaults.baseURL = \"https://mapoliticsapi.azurewebsites.net/\";\n  }\n\n  get(config) {\n    return new Promise((resolve, reject) => {\n      axios.get(this.endPoint, config).then(value => {\n        console.log(\"success\");\n        resolve(value.data);\n      }).catch(error => {\n        console.log(\"error\");\n        // TODO: This has to be done... Ahmed\n        reject(error);\n      });\n    });\n  }\n  async post(requestPayload, config) {\n    return new Promise((resolve, reject) => {\n      axios.post(this.endPoint, requestPayload, config).then(value => {\n        resolve(value.data);\n      }).catch(error => {\n        // TODO: This has to be done... Ahmed\n        reject(error);\n      });\n    });\n  }\n}","map":{"version":3,"names":["axios","AxiosHelper","constructor","endPoint","defaults","baseURL","get","config","Promise","resolve","reject","then","value","console","log","data","catch","error","post","requestPayload"],"sources":["/Users/syedfuzail/Documents/Imobisoft/MyReactPract/src/helper/helper.ts"],"sourcesContent":["import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nexport default class AxiosHelper {\n  private endPoint: string = \"\";\n\n  /**\n   * @param endPoint This will be different for every endpoint.\n   */\n  constructor(endPoint: string) {\n    this.endPoint = endPoint;\n    axios.defaults.baseURL = \"https://api.pkubite.com/\";\n   //  axios.defaults.baseURL = \"https://mapoliticsapi.azurewebsites.net/\";\n  }\n\n  public get(config?: AxiosRequestConfig): Promise<any> {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(this.endPoint, config)\n        .then((value: AxiosResponse) => {\n          console.log(\"success\");\n          resolve(value.data);\n        })\n        .catch((error: AxiosError) => {\n          console.log(\"error\");\n          // TODO: This has to be done... Ahmed\n          reject(error);\n        });\n    });\n  }\n\n  public async post<T>(requestPayload: T, config?: any): Promise<T> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(this.endPoint, requestPayload, config)\n        .then((value: AxiosResponse) => {\n          resolve(value.data);\n        })\n        .catch((error: AxiosError) => {\n          // TODO: This has to be done... Ahmed\n          reject(error);\n        });\n    });\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyD,OAAO;AAE5E,eAAe,MAAMC,WAAW,CAAC;EAG/B;AACF;AACA;EACEC,WAAW,CAACC,QAAgB,EAAE;IAAA,KALtBA,QAAQ,GAAW,EAAE;IAM3B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxBH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,0BAA0B;IACpD;EACD;;EAEOC,GAAG,CAACC,MAA2B,EAAgB;IACpD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCV,KAAK,CACFM,GAAG,CAAC,IAAI,CAACH,QAAQ,EAAEI,MAAM,CAAC,CAC1BI,IAAI,CAAEC,KAAoB,IAAK;QAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtBL,OAAO,CAACG,KAAK,CAACG,IAAI,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAiB,IAAK;QAC5BJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB;QACAJ,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEA,MAAaC,IAAI,CAAIC,cAAiB,EAAEZ,MAAY,EAAc;IAChE,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCV,KAAK,CACFkB,IAAI,CAAC,IAAI,CAACf,QAAQ,EAAEgB,cAAc,EAAEZ,MAAM,CAAC,CAC3CI,IAAI,CAAEC,KAAoB,IAAK;QAC9BH,OAAO,CAACG,KAAK,CAACG,IAAI,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAiB,IAAK;QAC5B;QACAP,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}